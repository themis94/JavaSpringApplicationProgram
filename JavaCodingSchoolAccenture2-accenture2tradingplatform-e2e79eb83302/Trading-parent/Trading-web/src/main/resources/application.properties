#logging.level.org.springframework.web=DEBUG
logging.level.gr.Accenture2.TradingPlatform=DEBUG

#output to a temp_folder/file
logging.file=C:/Trading/trading-web.log

# Logging pattern for the console
logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Logging pattern for file
logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

spring.freemarker.template-loader-path:/views
spring.freemarker.suffix:.ftl

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "accenture_trading"
# useSSL=false should be fixed otherwise
spring.datasource.url = jdbc:mysql://localhost:3306/accenture_trading?useSSL=false

# Username and password
spring.datasource.username = root

# Eleos : SET PASSWORD FOR 'root'@'localhost' = PASSWORD('root');
spring.datasource.password = 

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
